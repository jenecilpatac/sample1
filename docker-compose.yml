version: '3.7'

services:
  sample2:
    build:
      context: .  # Build the HTML page from the Dockerfile in the current directory
    networks:
      - citus_network
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    expose:
      - "5002"  # Expose port 80 for the NGINX load balancer to access
    deploy:
      replicas: 3  # Scale to 3 replicas of the HTML page service
    environment:
      POSTGRES_HOST: 10.10.2.194 # Use master node as the DB host
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: coordinator_postgres
      POSTGRES_HOST_AUTH_METHOD: md5
      CITUS_COORDINATOR: 10.10.2.194

  # Citus Worker Nodes (No ports needed)
  worker1:
    image: busybox  # Use a simple image that doesn't run PostgreSQL; worker only connects to global PostgreSQL
    container_name: citus_worker1
    environment:
      CITUS_COORDINATOR: 10.10.2.194  # IP of the globally installed Citus coordinator
    networks:
      - citus_network
    restart: always
    entrypoint: ["sh", "-c", "echo 'Connecting to Citus Coordinator at $CITUS_COORDINATOR' && sleep infinity"]

  worker2:
    image: busybox  # Use a simple image that doesn't run PostgreSQL; worker only connects to global PostgreSQL
    container_name: citus_worker2
    environment:
      CITUS_COORDINATOR: 10.10.2.194  # IP of the globally installed Citus coordinator
    networks:
      - citus_network
    restart: always
    entrypoint: ["sh", "-c", "echo 'Connecting to Citus Coordinator at $CITUS_COORDINATOR' && sleep infinity"]

  nginx:
    image: nginx:alpine  # Use the official NGINX image
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Mount the custom NGINX config
    ports:
      - "5002:5002"  # Expose port 5003 on the host, forwarding to port 5003 on the container
    networks:
      - citus_network

networks:
  citus_network:
    driver: bridge
